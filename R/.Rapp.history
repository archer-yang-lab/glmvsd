setwd('/Users/emeryyi/Dropbox/collaborator/Nanying')
n=200 #
p=8 #
#
n.folds = 5#
#
b <- c(1,1,1,-3*sqrt(2)/2) #
x=matrix(rnorm(n*p, mean=0, sd=1), n, p) #
feta=x[, 1:4]%*%b #
fprob=exp(feta)/(1+exp(feta))#
y=rbinom(n, 1, fprob)#
# user provide a model to be checked#
model_check <- c(0,1,1,1,0,0,0,1)#
#
candidate_models = rbind(c(0,0,0,0,0,0,0,1), #
c(0,1,0,0,0,0,0,1), c(1,1,1,1,0,0,0,0), #
c(0,1,1,0,0,0,0,1), c(1,1,0,1,1,0,0,0), #
c(1,1,0,0,1,0,0,0), c(0,0,0,0,0,0,0,0),#
c(1,1,1,1,1,0,0,0))#
#
n_rep = 100#
n_train = ceiling(n/2)#
psi = 1#
candidate_models <- unique(candidate_models)#
rownames(candidate_models) <- NULL#
candidate_models <- candidate_models[order(rowSums(candidate_models)), ]#
candidate_models <- candidate_models[rowSums(candidate_models) < (n-2), ]#
#
prior = FALSE
setwd('/Users/emeryyi/Dropbox/Research/googleproject/glmvsd/R')
p <- NCOL(x)#
    n <- length(y)#
    n_mo <- NROW(candidate_models)#
    sk <- rowSums(candidate_models)#
    ik <- rep(NA, n_mo)#
    if (any(candidate_models[1, ] == 1)) {#
        for (i in 1:n_mo) {#
            glmfit <- glm(y ~ x[, candidate_models[i, ] == 1], family = "binomial")#
			ik[i] <-glmfit$deviance + sk[i] * log(n)#
        }#
    } else {#
		ik[1] <- -2*log(prod(mean(y)^y * (1-mean(y))^(1- y))) + sk[1]*log(n)#
        for (i in 2:n_mo) {#
            glmfit <- glm(y ~ x[, candidate_models[i, ] == 1], family = "binomial")#
			ik[i] <-glmfit$deviance + sk[i] * log(n)#
        }#
    }#
	if (prior == TRUE) {#
        ck <- rep(NA, n_mo)#
        if (sk[1] == 0) {#
            ck[1] <- 2 * log(sk[1] + 2)/choose(p, sk[1])#
            ck[2:n_mo] <- sk[2:n_mo] * log(exp(1) * p/sk[2:n_mo]) + 2 * #
                log(sk[2:n_mo] + 2)#
        } else {#
            ck <- sk * log(exp(1) * p/sk) + 2 * log(sk + 2)#
        }#
        ik <- exp(ik/2 - psi*ck)#
    }#
	weight <- ik/sum(ik)#
	list(weight = weight)
