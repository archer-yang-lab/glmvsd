library(glmvsd)#
#
n = 300 #
p = 8#
#
n.folds = 5#
#
b <- c(1,1,1,-3*sqrt(2)/2) #
x=matrix(rnorm(n*p, mean=0, sd=1), n, p) #
feta=x[, 1:4]%*%b #
fprob=exp(feta)/(1+exp(feta))#
y=rbinom(n, 1, fprob)#
# user provide a model to be checked#
model_check <- c(0,1,1,1,0,0,0,1,rep(0,p-8))#
#
candidate_models = #
rbind(c(0,0,0,0,0,0,0,1,rep(0,p-8)), #
c(0,1,0,0,0,0,0,1,rep(0,p-8)), c(1,1,1,1,0,0,0,0,rep(0,p-8)), #
c(0,1,1,0,0,0,0,1,rep(0,p-8)), c(1,1,0,1,1,0,0,0,rep(0,p-8)), #
c(1,1,0,0,1,0,0,0,rep(0,p-8)), c(0,0,0,0,0,0,0,0,rep(0,p-8)),#
c(1,1,1,1,1,0,0,0,rep(0,p-8)))
setwd('/Users/emeryyi/Dropbox/collaborator/Nanying')
n_train = ceiling(n/2)#
n_rep = 100#
candidate_models <- unique(candidate_models)#
rownames(candidate_models) <- NULL#
candidate_models <- candidate_models[order(rowSums(candidate_models)), ]#
candidate_models <- candidate_models[rowSums(candidate_models) < (n_train-2), ]
p <- NCOL(x)#
    n <- length(y)#
    n_mo <- NROW(candidate_models)#
    sk <- rowSums(candidate_models)#
    w_num <- matrix(NA, n_rep, n_mo)
i = 1
j = 1
tindex <- sample(n, n_train, replace = F)
j=2
glmfit <- glm(y[tindex] ~ x[tindex, candidate_models[j, ] == #
                  1],family="binomial",control = list(maxit = 1000000))
gk <- cbind(1,x[-tindex, candidate_models[j, #
                  ] == 1])%*%glmfit$coef
gk
gk <- x[-tindex, candidate_models[j, #
                  ] == 1]%*%glmfit$coef[-1] + glmfit$coef[1]
glmfit$coef[-1]
x[-tindex, candidate_models[j, #
                  ] == 1]
setwd('/Users/emeryyi/Dropbox/Research/googleproject/glmvsd/R')
x[-tindex, candidate_models[j, #
                  ] == 1]%*%glmfit$coef[-1]
?%*%
